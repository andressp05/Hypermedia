swagger: '2.0'
info:
  description: >-
    Hypermedia Applications project year 2018-2019. A bookstore with book lists
    and user functions. You can use email `test@test.com` and password `123` to test the login features
  version: 1.0.0
  title: Book House
  termsOfService: ''
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: hypermedia-bookshop.herokuapp.com
basePath: /api
tags:
  - name: book
    description: All the book related commands
  - name: author
    description: All the authors related commands
  - name: user
    description: All the user management commands
  - name: event
    description: All the events related commands
  - name: cart
    description: All the cart related commands
  - name: reviews
    description: All the reviews related commands
schemes:
  - https
  - http
paths:
  /books:
    get:
      tags:
        - book
      summary: Books available in the inventory
      description: List of books available in the inventory
      operationId: booksGET
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          required: false
          type: integer
        - name: limit
          in: query
          description: >-
            Maximum number of items per page. Default is 20 and cannot exceed
            500.
          required: false
          type: integer
      responses:
        '200':
          description: A collection of Books
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '404':
          description: Books not found
      x-swagger-router-controller: Book
  '/books/{isbn}':
    get:
      tags:
        - book
      summary: Find book by ID
      description: Returns a book
      operationId: getBookById
      produces:
        - application/json
      parameters:
        - name: isbn
          in: path
          description: ID of book to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Book'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
      x-swagger-router-controller: Book
  /favorites:
    get:
      tags:
        - book
      summary: Favorites books available in the inventory
      description: List of favorites books available in the inventory
      operationId: favoritesGET
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          required: false
          type: integer
        - name: limit
          in: query
          description: >-
            Maximum number of items per page. Default is 20 and cannot exceed
            500.
          required: false
          type: integer
      responses:
        '200':
          description: A collection of favorites books
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '404':
          description: Favorites books not found
        '500':
          description: error
      x-swagger-router-controller: Favorite
  /bestsellers:
    get:
      tags:
        - book
      summary: Best sellers books available in the inventory
      description: List of best sellers books available in the inventory
      operationId: bestSellersGET
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          required: false
          type: integer
        - name: limit
          in: query
          description: >-
            Maximum number of items per page. Default is 20 and cannot exceed
            500.
          required: false
          type: integer
      responses:
        '200':
          description: A collection of best sellers books
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
        '404':
          description: Best sellers books not found
        '500':
          description: error
      x-swagger-router-controller: Sale
  /authors:
    get:
      tags:
        - author
      summary: Authors available in the database
      description: List of authors available in the database
      operationId: authorsGET
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          required: false
          type: integer
        - name: limit
          in: query
          description: >-
            Maximum number of items per page. Default is 20 and cannot exceed
            500.
          required: false
          type: integer
      responses:
        '200':
          description: A collection of Authors
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        '404':
          description: Authors not found
      x-swagger-router-controller: Author
  '/authors/{authorId}':
    get:
      tags:
        - author
      summary: Find an author by ID
      description: Returns an author
      operationId: getAuthorById
      produces:
        - application/json
      parameters:
        - name: authorId
          in: path
          description: ID of the author to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Author'
        '400':
          description: Invalid ID supplied
        '404':
          description: Author not found
      x-swagger-router-controller: Author
  /events:
    get:
      tags:
        - event
      summary: Events available in the database
      description: List of events available in the database
      operationId: eventsGET
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: Pagination offset. Default is 0.
          required: false
          type: integer
        - name: limit
          in: query
          description: >-
            Maximum number of items per page. Default is 20 and cannot exceed
            500.
          required: false
          type: integer
      responses:
        '200':
          description: A collection of Events
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        '404':
          description: Events not found
      x-swagger-router-controller: Event
  '/events/{eventId}':
    get:
      tags:
        - event
      summary: Find an event by ID
      description: Returns an event
      operationId: getEventById
      produces:
        - application/json
      parameters:
        - name: eventId
          in: path
          description: ID of the event to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Event'
        '400':
          description: Invalid ID supplied
        '404':
          description: Event not found
      x-swagger-router-controller: Event
  /user/register:
    post:
      tags:
        - user
      summary: Create user
      description: Register an user on the site
      operationId: createUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: The name of the user
          required: true
          type: string
        - name: surname
          in: formData
          description: The surname of the user
          required: true
          type: string
        - name: email
          in: formData
          description: The email of the user
          required: true
          type: string
        - name: password
          in: formData
          description: The password for login
          required: true
          type: string
        - name: address
          in: formData
          description: The address of the user
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          headers:
            Set-Cookie:
              type: string
              description: The cookie-session related to the user registered
        '403':
          description: user already registered
      x-swagger-router-controller: User
  /user/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: The user name for login
          required: true
          type: string
        - name: password
          in: formData
          description: The password for login
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          headers:
            Set-Cookie:
              type: string
              format: date-time
              description: The cookie-session related to the user logged in
          schema:
            type: string
        '400':
          description: Invalid username/password supplied
        '403':
          description: user already logged in
      x-swagger-router-controller: User
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          headers:
            Set-Cookie:
              type: string
              format: date-time
              description: The cookie-session related to the user logged out
      x-swagger-router-controller: User
  /review:
    get:
      tags:
        - reviews
      summary: Get all the reviews of the given book
      operationId: getReviews
      produces:
        - application/json
      parameters:
        - name: isbn
          in: query
          description: isbn of the book to get the reviews
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
        '400':
          description: Invalid ISBN supplied
        '404':
          description: Book not found
      x-swagger-router-controller: Review
  /cart:
    get:
      tags:
        - cart
      summary: Get cart for the current user or session
      description: ''
      operationId: getCart
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Cart'
      x-swagger-router-controller: Cart
    delete:
      tags:
        - cart
      summary: Remove an item in the current user or session cart
      description: Remove an item in the current user cart
      operationId: removeFromCart
      produces:
        - application/json
      parameters:
        - name: isbn
          in: query
          description: The isbn of the book to remove
          type: integer
          format: int64
      responses:
        '200':
          description: Successful operation. Returns the new cart of the user
          schema:
            $ref: '#/definitions/Cart'
        '400':
          description: The request has an invalid syntax
        '404':
          description: The item requested is not in the shopping cart
      x-swagger-router-controller: Cart
    post:
      tags:
        - cart
      summary: Add an item to the cart
      description: Add an item to the cart
      operationId: addToCart
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: The isbn of the book to be added to the cart
          schema:
            type: object
            required:
              - isbn
              - quantity
            properties:
              isbn:
                type: integer
                format: int64
              quantity:
                type: integer
                format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Cart'
        '500':
          description: Error on the server
      x-swagger-router-controller: Cart
    patch:
      tags:
        - cart
      summary: Update item quantity in the cart with the current value
      description: ''
      operationId: updateQuantity
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          description: The isbn of the book to be added to the cart
          schema:
            type: object
            required:
              - isbn
              - quantity
            properties:
              isbn:
                type: integer
                format: int64
              quantity:
                type: integer
                format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Cart'
        '500':
          description: Error on the server
      x-swagger-router-controller: Cart
definitions:
  Book:
    type: object
    required:
      - ISBN
      - price
      - name
    properties:
      ISBN:
        type: integer
        format: int64
      name:
        type: string
      author:
        type: array
        items:
          type: string
      genre:
        type: string
      abstract:
        type: string
      edition:
        type: integer
        format: int32
      year:
        type: integer
        format: int32
      publisher:
        type: string
      pages:
        type: integer
        format: int32
      price:
        $ref: '#/definitions/Amount'
    title: Book
    description: A book for sale in the store
    example:
      ISBN: '718157834'
      title: Me before you
      author: Jojo Moyes
      literary_gen: Romance Fiction
      edition: '1'
      year: '2012'
      publisher: Penguin Books
      price:
        value: 13
        currency: EUR
      status: available
  Amount:
    type: object
    required:
      - currency
      - value
    properties:
      value:
        type: number
        format: double
        minimum: 0.01
        maximum: 10000
      currency:
        $ref: '#/definitions/Currency'
    description: |
      Price
    example:
      currency: EUR
      value: 11
  Currency:
    type: string
    pattern: '^[A-Z]{3,3}$'
    description: |
      Currency in standar format: 3 letters
    example: EUR
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
    example:
      firstName: firstName
      lastName: lastName
      password: password
      phone: phone
      id: 0
      email: email
      username: username
  Author:
    type: object
    required:
      - author_id
      - name
      - surname
    properties:
      author_id:
        type: integer
        format: int64
      name:
        type: string
      surname:
        type: string
      short_bio:
        type: string
      img_path:
        type: string
      books:
        type: array
        items:
          type: object
          properties:
            ISBN:
              type: string
            name:
              type: string
    title: Author
    description: An author who writes books
    example:
      author_id: '99'
      name: Pedro
      surname: Infante
      short_bio: A great writer
      img_path: 'null'
  Event:
    type: object
    required:
      - name
      - event_id
    properties:
      event_id:
        type: integer
        format: int64
      name:
        type: string
      date_start:
        type: string
        format: date
      time_start:
        type: string
      date_end:
        type: string
        format: date
      time_end:
        type: string
      img_path:
        type: string
    title: Event
    description: An event information
    example:
      event_id: int64
      name: Poli Books
      date_start: 03/05/19
      time_start: '08:00:00'
      date_end: 05/05/19
      time_end: '22:30:00'
      img_path: 'https://placehold.co/700x300'
  Cart:
    type: object
    properties:
      books:
        type: array
        items:
          type: object
          properties:
            ISBN:
              type: integer
              format: int64
            book_name:
              type: string
            quantity:
              type: integer
              format: int32
            price:
              $ref: '#/definitions/Amount'
            total:
              $ref: '#/definitions/Amount'
            img_path:
              type: string
      subtotal:
        type: number
        format: float
    example:
      ISBN: 1234567890
      book_name: Harry Potter
      quantity: 2
      price: 7
      total: 14
      image_path: 'https://placehold.co/300x200'
  Review:
    type: object
    properties:
      ISBN:
        type: integer
        format: int64
      review:
        type: string
      email:
        type: string
      name:
        type: string
    example:
      ISBN: 1234567890
      review: Very nice book!
      email: email@test.com
      name: John Doe
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
